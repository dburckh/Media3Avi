plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply from: '../constants.gradle'

android {
    compileSdkVersion project.ext.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion project.ext.minSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    sourceSets {
        test.assets.srcDir './assets/'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    namespace 'com.homesoft.exo.avi'
}

def injectDependenciesInPom(pom) {
    pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        configurations.implementation.allDependencies.each { dependency ->
            if (!dependency.version.equals("unspecified") &&
                    !dependency.group.equals("unspecified") &&
                    !dependency.name.equals("unspecified")) {
                def dependencyNode = dependenciesNode.appendNode('dependency')
                dependencyNode.appendNode('groupId', dependency.group)
                dependencyNode.appendNode('artifactId', dependency.name)
                dependencyNode.appendNode('version', dependency.version)
            }
        }
    }
}
//Install to local maven repo
//gradlew media3avi:publishToMavenLocal

publishing {
    publications {
        libRaw(MavenPublication) {
            groupId = "${rootProject.ext.groupId}"
            artifactId = "${rootProject.ext.artifactId}"
            version "${rootProject.ext.artifactVersion}"
            artifact("$buildDir/outputs/aar/${rootProject.ext.artifactId}-release.aar")

            injectDependenciesInPom(pom)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/dburckh/Media3Avi")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                username = System.getenv("GPR_USER")
                password = System.getenv("GPR_API_KEY")
            }
        }
    }
}

dependencies {

    def media3_version = rootProject.ext.media3_version
    implementation 'androidx.annotation:annotation:' + androidxAnnotationVersion

    // Common functionality used across multiple media libraries
    implementation "androidx.media3:media3-common:$media3_version"

    // For extracting data from media containers
    implementation "androidx.media3:media3-extractor:$media3_version"

    // For extracting data from media containers
    implementation "androidx.media3:media3-exoplayer:$media3_version"

    //testImplementation project(modulePrefix + 'testdata')
    testImplementation 'org.robolectric:robolectric:' + robolectricVersion
    testImplementation 'junit:junit:' + junitVersion
    testImplementation 'androidx.test:core:' + androidxTestCoreVersion
    testImplementation 'androidx.test.ext:junit:' + androidxTestJUnitVersion
    testImplementation "androidx.media3:media3-test-utils:$media3_version"
}